{"repository_name":"github.com/imdrasil/factory","body":"# Factory [![Build Status](https://travis-ci.org/imdrasil/factory.svg)](https://travis-ci.org/imdrasil/factory) [![Latest Release](https://img.shields.io/github/release/imdrasil/factory.svg)](https://github.com/imdrasil/factory/releases) [![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://imdrasil.github.io/factory/latest/)\n\nEasy to use but flexible factory definition utility. Coul be used for testing purpose and for developing as well.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  factory:\n    github: imdrasil/factory\n```\n\n## Usage\n\n```crystal\nrequire \"factory\"\n```\n\nTo define new factory\n```crystal\nclass HumanFactory < Factory::Base\nend\n```\n\nBy convenience this factory will builds `Human` class but this behavior can be overrided using `describe_class` macro:\n\n```crystal\nclass AdminFactory < Factory::Base\n  describe_class User\nend\n```\n\nFactory will build class passing to constructor hash with string keys, so those class should be ready for this. To define attributes for passing to constructor use `attr` macro:\n\n```crystal\nclass TestFactory < Factory::Base\n  attr :f1, \"Ivan\"\n  attr :f2, rand, Float64\n  attr :f3, -> { rand(1..3) }\nend\n```\n\nAttributes, passed as `Proc` will be executed each time. Other ones - only once and cached. If type could be analyzed (as with calling `rand` upper), you can specify exact type passing it as third parameter.\n\nThere is also assign strategy using `assign` macro. Using it all attributes will be assigned after initializing.\n\n```crystal\nclass TestFactory < Factory::Base\n  assign :f1, \"Ivan\"\n  assign :f2, rand, Float64\n  assign :f3, -> { rand(1..3 }\nend\n\n# Will be do smth like\nobj = Test.new\nobj.f1 = TestFactory.f1 # \"Ivan\"\nobj.f2 = TestFactory.f2 # 0.61 - just random value shared across all object\nobj.f3 = -> { rand(1..3) }.call\n```\n\nIf you specify no `attr` - will call construtor without any arguments and you will not be able pass anything to it.\n\nIf you need to specify exact type of given hash value use `argument_type`:\n\n```crystal\nclass Test\n  @@static = 1\n  @@dynamic = 1\n  property f1 : String, f2 : Int32, f3 : Float64,\n    f4 : String?, f5 : Int32?, f6 : Array(Int32)?\n\n  def initialize(hash)\n    @f1 = hash[\"f1\"].as(String)\n    @f2 = hash[\"f2\"].as(Int32)\n    @f3 = hash[\"f3\"].as(Float64)\n    @f6 = hash[\"f6\"].as(Array(Int32)) if hash.has_key?(\"f6\")\n  end\nend\n\nclass TestFactory < Factory::Base\n  argument_type String | Int32 | Float64 | Array(Int32)\n  attr :f1, \"some\"\n  attr :f2, 1\n  attr :f3, rand, Float64\nend\n```\n\nAlso `after_initialize` callback could be specified:\n\n```crystal\nclass TestFactory < Factory::Base\n  after_initialize do |t|\n    super # if you want parrent one to be inked as well\n    t.f1.not_nil! += 1\n  end\nend\n```\n\nBuilder method could be specified as well:\n\n```crystal\nclass TestFactory < Factory::Base\n  # here is default builder\n  initialize_with do |hash, traits|\n    obj = Test.new(hash)\n    make_assigns(obj, traits) # makes all assignements (traits will be described later)\n    obj\n  end\nend\n```\n\nTo specify sequence of some attributes (only allowed as attr hook) use `sequence`:\n\n```crystal\nsequence(:f1) { |i| \"user#{i}@example.com\" }\n```\n\nYou could inherite from existing factory and override some parameters:\n```crystal\nclass HumanFactory < Factory::Base\n  describe_class User\n  attr :f1, \"asd\"\nend\n\nclass AdminFactory < HumanFactory\n  attr :f1, \"admin\"\n  assign :f2, 1\nend\n```\n\nChild factory inherits all attrs, assigns, traits, sequences, callbacks, class names, has value type.\n\nTo group several attributes or assignments use trait. \n\n```crystal\nclass HumanFactory < Factory::Base\n  trait :homo do\n    attr :iq, 50\n  end\nend\n```\n\nTraits can't specify callbacks, described type, hash value type.\n\nTo build object direct call could be used\n```crystal\nHumanFactory.build\nHumanFactory.build(some_attr: \"asd\")\nHumanFactory.build({\"some_attr\" => \"asd\")\nHumanFactory.build([\"some_trait\"], some_attr: \"asd\")\nHumanFactory.build([\"some_trait\"], {\"some_attr\" => \"asd\"})\n```\n\nAlso helper methods are defined as well\n\n```crystal\nFactory.build_human\nFactory.build_human(some_attr: \"asd\")\nFactory.build_human({\"some_attr\" => \"asd\")\nFactory.build_human([\"some_trait\"], some_attr: \"asd\")\nFactory.build_human([\"some_trait\"], {\"some_attr\" => \"asd\"})\n# also you can specify count as first parameter in any of thos methods\nFactory.build_human(3, [\"some_trait\"], {\"some_attr\" => \"asd\"})\n```\n\n#### Jennifer Support\n\nTo create factory for (Jennifer)[https://github.com/imdrasil/jennifer.cr] model \n\n```crystal\n# require all jennifer staff and models\nrequire \"factory\"\nrequire \"factory/jennifer\"\n\nclass FilmFactory < Factory::Jennifer::Base\n  attr :rating, 5\n  assign :name, \"Test Film\" \n\n  trait :bad do\n    assign :rating, 0\n  end\nend\n```\n\nIt provides direct creating methods same as for building:\n\n```crystal\nFilmFactory.create([:bad], {:name => \"Atilla\"})\n```\n\nAlso any association could be described on the factory or trait level:\n\n```crystal\nclass FilmFactory < Factory::Jennifer::Base\n  association :author\n  association :actor, UserFactory, options: {name: \"Artemius Fault\"}\nend\n```\n\nAllowed arguments:\n\n- `:name` - first argument - represent model association name (mandatory)\n- `:factory` - represents factory class (optional); is defaulted from association name\n- `:strategy` - represents creation strategy; optional; default is \"create\" (also \"build\" is allowed)\n- `:options` - represents extra arguments to association factory; optional \n\n## Development\n\nFor development postgres is required because of testing integration with Jennifer.\n\nPossible next tasks:\n\n- think  about adding assigning via hash or named tuble argument;\n- adding `%attr` to traits.\n\n\n## Contributing\n\n1. Fork it ( https://github.com/imdrasil/factory/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [imdrasil](https://github.com/imdrasil) Roman Kalnytskyi - creator, maintainer\n\n","program":{"html_id":"github.com/imdrasil/factory/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/imdrasil/factory","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/imdrasil/factory/Factory","path":"Factory.html","kind":"module","full_name":"Factory","name":"Factory","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"factory.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory.cr"},{"filename":"factory/trait.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr"},{"filename":"factory/base.cr","line_number":3,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr"},{"filename":"factory/jennifer/base.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr"},{"filename":"factory/jennifer/trait.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/trait.cr"},{"filename":"factory/sequence.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr"},{"filename":"factory/version.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/version.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"FACTORIES","value":"{} of String => String","doc":null,"summary":null},{"name":"VERSION","value":"\"0.1.2\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"build_methods-macro","html_id":"build_methods-macro","name":"build_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory.cr#L40","def":{"name":"build_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro factory_builders(factory_name)\n      module ::Factory\n        def self.build_\n\\{\n{factory_name}}\n          \n\\{\n{@type}}.build\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(**attrs)\n          \n\\{\n{@type}}.build(**attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(attrs : Hash | NamedTuple)\n          \n\\{\n{@type}}.build(attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array)\n          \n\\{\n{@type}}.build(traits)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array, **attrs)\n          \n\\{\n{@type}}.build(traits, **attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array, attrs : Hash | NamedTuple)\n          \n\\{\n{@type}}.build(traits, attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, **attrs)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(**attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, attrs : Hash | NamedTuple)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array, **attrs)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits, **attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array, attrs : Hash | NamedTuple)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits, attrs) }\n          arr\n        \nend\n      \nend\n    \nend\n  \n"}},{"id":"default_methods-macro","html_id":"default_methods-macro","name":"default_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory.cr#L4","def":{"name":"default_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro attr(name, value, klass = nil)\n      \n\\{% if\n !value.is_a?(ProcLiteral) %}\n        \n\\{% if\n klass != nil %}\n          @@\n\\{\n{name.id}} : \n\\{\n{klass}} = \n\\{\n{value}}\n        \n\\{% e\nlse %}\n          @@\n\\{\n{name.id}} = \n\\{\n{value}}\n        \n\\{% end\n %}\n        \n\\{% \nATTRIBUTES[name.id.stringify] = \"plain\" %}\n      \n\\{% e\nlse %}\n        \n\\{% \nATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      \n\\{% end\n %}\n    \nend\n\n    macro assign(name, value, klass = nil)\n      \n\\{% if\n !value.is_a?(ProcLiteral) %}\n        \n\\{% if\n klass != nil %}\n          @@assign_\n\\{\n{name.id}} : \n\\{\n{klass}} = \n\\{\n{value}}\n        \n\\{% e\nlse %}\n          @@assign_\n\\{\n{name.id}} = \n\\{\n{value}}\n        \n\\{% end\n %}\n        \n\\{% \nASSIGNS[name.id.stringify] = \"plain\" %}\n      \n\\{% e\nlse %}\n        \n\\{% \nASSIGNS[name.id.stringify] = value.id.stringify %}\n      \n\\{% end\n %}\n    \nend\n\n    macro sequence(name, init = 0, &block)\n      \n\\{% \nsclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n      \n\\{% \nATTRIBUTES[name.id.stringify] = \"-> \n{ ->(#{block.args[0]} : Int32) \n{ #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n      class \n\\{\n{sclass}} < Factory::Sequence\n        @@start = \n\\{\n{init}}\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/imdrasil/factory/Factory/Base","path":"Factory/Base.html","kind":"class","full_name":"Factory::Base","name":"Base","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/base.cr","line_number":4,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"IS_FACTORY","value":"[\"false\"]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/imdrasil/factory/Factory/Jennifer/Base","kind":"class","full_name":"Factory::Jennifer::Base","name":"Base"}],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"_after_initialize(obj)-class-method","html_id":"_after_initialize(obj)-class-method","name":"_after_initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L20","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L20","def":{"name":"_after_initialize","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"assign_attr(obj,name,value)-class-method","html_id":"assign_attr(obj,name,value)-class-method","name":"assign_attr","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(obj, name, value)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L23","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L23","def":{"name":"assign_attr","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Attribute #{name} can't be found.\")"}},{"id":"attributes-class-method","html_id":"attributes-class-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L27","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L27","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{} of String => String"}},{"id":"build-class-method","html_id":"build-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L10","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L10","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get_trait(name:String,go_deep)-class-method","html_id":"get_trait(name:String,go_deep)-class-method","name":"get_trait","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"go_deep","doc":null,"default_value":"","external_name":"go_deep","restriction":""}],"args_string":"(name : String, go_deep)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L13","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L13","def":{"name":"get_trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"go_deep","doc":null,"default_value":"","external_name":"go_deep","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get_trait(name:Symbol)-class-method","html_id":"get_trait(name:Symbol)-class-method","name":"get_trait","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L16","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L16","def":{"name":"get_trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"get_trait(name.to_s)"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"after_finished_hook-macro","html_id":"after_finished_hook-macro","name":"after_finished_hook","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L7","def":{"name":"after_finished_hook","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    "}},{"id":"after_initialize-macro","html_id":"after_initialize-macro","name":"after_initialize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L38","def":{"name":"after_initialize","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self._after_initialize(\n{{ block.args[0].id }}\n)\n        super\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"argument_type(type)-macro","html_id":"argument_type(type)-macro","name":"argument_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(type)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L55","def":{"name":"argument_type","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% ARGUMENT_TYPE.push(type.stringify) %}\n\n    \n"}},{"id":"assign(name,value,klass=nil)-macro","html_id":"assign(name,value,klass=nil)-macro","name":"assign","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L31","def":{"name":"assign","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !(value.is_a?(ProcLiteral)) %}\n        {% if klass != nil %}\n          @@assign_{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@assign_{{ name.id }} = {{ value }}\n        {% end %}\n        {% ASSIGNS[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ASSIGNS[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"attr(name,value,klass=nil)-macro","html_id":"attr(name,value,klass=nil)-macro","name":"attr","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L31","def":{"name":"attr","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !(value.is_a?(ProcLiteral)) %}\n        {% if klass != nil %}\n          @@{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@{{ name.id }} = {{ value }}\n        {% end %}\n        {% ATTRIBUTES[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"describe_class(klass)-macro","html_id":"describe_class(klass)-macro","name":"describe_class","doc":null,"summary":null,"abstract":false,"args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"args_string":"(klass)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L51","def":{"name":"describe_class","args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% CLASS_NAME.push(klass.stringify) %}\n\n    \n"}},{"id":"factory_builders(factory_name)-macro","html_id":"factory_builders(factory_name)-macro","name":"factory_builders","doc":null,"summary":null,"abstract":false,"args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"args_string":"(factory_name)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L32","def":{"name":"factory_builders","args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      module ::Factory\n        def self.build_\n{{ factory_name }}\n\n          \n{{ @type }}\n.build\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(**attrs)\n          \n{{ @type }}\n.build(**attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(attrs : Hash | NamedTuple)\n          \n{{ @type }}\n.build(attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array)\n          \n{{ @type }}\n.build(traits)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array, **attrs)\n          \n{{ @type }}\n.build(traits, **attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array, attrs : Hash | NamedTuple)\n          \n{{ @type }}\n.build(traits, attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, **attrs)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(**attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, attrs : Hash | NamedTuple)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array, **attrs)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits, **attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array, attrs : Hash | NamedTuple)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits, attrs) }\n          arr\n        \nend\n      \nend\n    \n"}},{"id":"initialize_with-macro","html_id":"initialize_with-macro","name":"initialize_with","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L45","def":{"name":"initialize_with","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self._initialize_with(\n{{ block.args[0].id }}\n, \n{{ block.args[1].id }}\n)\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"not_a_factory-macro","html_id":"not_a_factory-macro","name":"not_a_factory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L34","def":{"name":"not_a_factory","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% IS_FACTORY << \"false\" %}\n\n    \n"}},{"id":"sequence(name,init=0)-macro","html_id":"sequence(name,init=0)-macro","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"args_string":"(name, init = 0)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L31","def":{"name":"sequence","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% sclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n\n      \n{% ATTRIBUTES[name.id.stringify] = \"-> { ->(#{block.args[0]} : Int32) { #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n\n      class \n{{ sclass }}\n < Factory::Sequence\n        @@start = \n{{ init }}\n\n      \nend\n    \n"}},{"id":"skip_all_constructors-macro","html_id":"skip_all_constructors-macro","name":"skip_all_constructors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L73","def":{"name":"skip_all_constructors","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      skip_hash_constructor\n      skip_empty_constructor\n    "}},{"id":"trait(name)-macro","html_id":"trait(name)-macro","name":"trait","doc":"traits could be defined only for some class","summary":"<p>traits could be defined only for some class</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/base.cr#L60","def":{"name":"trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% trait_name = \"#{name.id.stringify.camelcase.id}Trait\" %}\n\n      \n{% TRAITS[name.id.stringify] = trait_name %}\n\n\n      macro _macro_trait_\n{{ name.id }}\n\n        class \n{{ trait_name.id }}\n < ::Factory::Trait(\n\\{\n{CLASS_NAME[-1].id}})\n          \n{{ (yield).stringify.id }}\n\n        \nend\n      \nend\n\n      \n{% TRAIT_CLASS_DECLARATIONS << \"_macro_trait_#{name.id}\" %}\n\n    \n"}}],"types":[]},{"html_id":"github.com/imdrasil/factory/Factory/Jennifer","path":"Factory/Jennifer.html","kind":"module","full_name":"Factory::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"factory/jennifer/base.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"association_macro-macro","html_id":"association_macro-macro","name":"association_macro","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L3","def":{"name":"association_macro","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      macro association(name, factory = nil, strategy = :create, options = nil)\n        \n\\{% \nASSOCIATIONS << name.id.stringify %}\n\n        \n\\{% if\n factory %}\n          \n\\{% \nklass = factory %}\n        \n\\{% e\nlse %}\n          \n\\{% \nklass = (name.id.stringify.camelcase + \"Factory\" ).id%}\n        \n\\{% end\n %}\n\n        def self.__process_association_\n\\{\n{name.id}}(obj)\n          aobj = \n\\{\n{klass}}.build(\n\\{% if\n options %}\n\\{\n{options}} \n\\{% end\n %})\n          \n\\{% if\n strategy.id.stringify == \"build\" %}\n            obj.append_\n\\{\n{name.id}}(aobj)\n          \n\\{% e\nlsif strategy.id.stringify == \"create\" %}\n            obj.add_\n\\{\n{name.id}}(aobj)\n          \n\\{% e\nlse %}\n            \n\\{% \nraise \"Strategy #{strategy.id} of #{@type} is not valid\"}\n          \n\\{% end\n %}\n        \nend\n      \nend\n    \n"}}],"types":[{"html_id":"github.com/imdrasil/factory/Factory/Jennifer/Base","path":"Factory/Jennifer/Base.html","kind":"class","full_name":"Factory::Jennifer::Base","name":"Base","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Factory/Base","kind":"class","full_name":"Factory::Base","name":"Base"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Factory/Base","kind":"class","full_name":"Factory::Base","name":"Base"},{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/jennifer/base.cr","line_number":26,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"ARGUMENT_TYPE","value":"[] of String","doc":null,"summary":null},{"name":"ASSIGNS","value":"{} of String => String","doc":null,"summary":null},{"name":"ATTRIBUTES","value":"{} of String => String","doc":null,"summary":null},{"name":"CLASS_NAME","value":"[Factory::Jennifer::Base] of String","doc":null,"summary":null},{"name":"IGNORED_METHODS","value":"[] of String","doc":null,"summary":null},{"name":"IS_FACTORY","value":"[\"true\", \"false\"]","doc":null,"summary":null},{"name":"SEQUENCES","value":"{} of String => String","doc":null,"summary":null},{"name":"TRAIT_CLASS_DECLARATIONS","value":"[] of String","doc":null,"summary":null},{"name":"TRAITS","value":"{} of String => String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory/Jennifer","kind":"module","full_name":"Factory::Jennifer","name":"Jennifer"},"doc":null,"summary":null,"class_methods":[{"id":"_after_create(obj)-class-method","html_id":"_after_create(obj)-class-method","name":"_after_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L29","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L29","def":{"name":"_after_create","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"_before_create(obj)-class-method","html_id":"_before_create(obj)-class-method","name":"_before_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L32","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L32","def":{"name":"_before_create","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"described_class-class-method","html_id":"described_class-class-method","name":"described_class","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L26","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L26","def":{"name":"described_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n        {{ CLASS_NAME.last.id }}\n        {% end %}"}},{"id":"get_trait(name:String,go_deep:Bool=true)-class-method","html_id":"get_trait(name:String,go_deep:Bool=true)-class-method","name":"get_trait","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"go_deep","doc":null,"default_value":"true","external_name":"go_deep","restriction":"Bool"}],"args_string":"(name : String, go_deep : Bool = <span class=\"n\">true</span>)","source_link":null,"source_link":null,"def":{"name":"get_trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"go_deep","doc":null,"default_value":"true","external_name":"go_deep","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if go_deep\n  super(name, go_deep)\nend"}},{"id":"process_association(obj,klasses,assoc)-class-method","html_id":"process_association(obj,klasses,assoc)-class-method","name":"process_association","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"klasses","doc":null,"default_value":"","external_name":"klasses","restriction":""},{"name":"assoc","doc":null,"default_value":"","external_name":"assoc","restriction":""}],"args_string":"(obj, klasses, assoc)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L35","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L35","def":{"name":"process_association","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"klasses","doc":null,"default_value":"","external_name":"klasses","restriction":""},{"name":"assoc","doc":null,"default_value":"","external_name":"assoc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"constructors":[],"instance_methods":[],"macros":[{"id":"after_create-macro","html_id":"after_create-macro","name":"after_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L45","def":{"name":"after_create","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"        def self._after_create(\n{{ block.args[0].id }}\n)\n          super\n          \n{{ block.body }}\n\n        \nend\n      \n"}},{"id":"after_finished_hook-macro","html_id":"after_finished_hook-macro","name":"after_finished_hook","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L58","def":{"name":"after_finished_hook","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{% if (@type.superclass != ::Factory::Jennifer::Base) && (@type != ::Factory::Jennifer::Base) %}\n          {% for assoc in @type.superclass.constant(\"ASSOCIATIONS\") %}\n            {% ASSOCIATIONS << assoc %}\n          {% end %}\n        {% end %}\n\n\n        \n{% if IS_FACTORY[-1] == \"true\" %}\n          {% factory_name = (@type.stringify.gsub(/Factory$/, \"\")).underscore %}\n          factory_creators({{ factory_name.id }})\n\n          \\{% if ATTRIBUTES.empty? %}\n            \\{% if !IGNORED_METHODS.includes?(\"empty_constructor\") %}\n              def self._initialize_with(hash, traits)\n                obj = described_class.build\n                make_assigns(obj, traits)\n                obj\n              end\n            \\{% end %}\n          \\{% else %}\n            \\{% if !IGNORED_METHODS.includes?(\"hash_constructor\") %}\n              def self._initialize_with(hash, traits)\n                obj = described_class.build(hash)\n                make_assigns(obj, traits)\n                obj\n              end\n            \\{% end %}\n          \\{% end %}\n\n          def self.create(traits = [] of String | Symbol, **attrs)\n            obj = _initialize_with(build_attributes(attrs, traits), traits)\n            _after_initialize(obj)\n            _before_create(obj)\n            obj.save\n            _after_create(obj)\n            obj\n          end\n\n          def self.create(attrs : Hash)\n            obj = _initialize_with(build_attributes(attrs), [] of String)\n            _after_initialize(obj)\n            _before_create(obj)\n            obj.save\n            _after_create(obj)\n            obj\n          end\n\n          def self.create(traits : Array, attrs : Hash)\n            obj = _initialize_with(build_attributes(attrs, traits), traits)\n            _after_initialize(obj)\n            _before_create(obj)\n            obj.save\n            _after_create(obj)\n            obj\n          end\n\n          def self.make_assigns(obj, traits : Array)\n            \\{% for k, v in ASSIGNS %}\n              obj.\\{{k.id}} = \\{% if v =~ /->/ %} \\{{v.id}}.call \\{% else %} @@assign_\\{{k.id}} \\{% end %}\n            \\{% end %}\n            traits.each do |name|\n              trait = get_trait(name.to_s)\n              raise \"Unknown trait\" if trait.nil?\n              trait.not_nil!.make_assignes(obj)\n            end\n            add_associations(obj, traits)\n          end\n\n          def self.add_associations(obj, traits : Array)\n            \\{% if !ASSOCIATIONS.empty? %}\n              trait_classes = traits.map { |e| get_trait(e) }.compact\n              \\{% for assoc in ASSOCIATIONS %}\n                process_association(obj, trait_classes, \\{{assoc}})\n              \\{% end %}\n            \\{% end %}\n          end\n\n          def self.process_association(obj, trait_classes : Array, assoc)\n            trait_classes.each do |t|\n              if t.associations.includes?(assoc)\n                t.process_association(obj, assoc)\n                return\n              end\n            end\n            \\{% for assoc in ASSOCIATIONS %}\n              __process_association_\\{{assoc.id}}(obj) if \\{{assoc}} == assoc\n            \\{% end %}\n            super(obj, trait_classes[0...1], assoc)\n          end\n        {% end %}\n\n      \n"}},{"id":"before_create-macro","html_id":"before_create-macro","name":"before_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L38","def":{"name":"before_create","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"        def self._before_create(\n{{ block.args[0].id }}\n)\n          super\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"factory_creators(factory_name)-macro","html_id":"factory_creators(factory_name)-macro","name":"factory_creators","doc":null,"summary":null,"abstract":false,"args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"args_string":"(factory_name)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L150","def":{"name":"factory_creators","args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        module ::Factory\n          def self.create_\n{{ factory_name }}\n\n            obj = \n{{ @type }}\n.create\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(**attrs)\n            obj = \n{{ @type }}\n.create(**attrs)\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(attrs : Hash)\n            obj = \n{{ @type }}\n.create(attrs)\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(traits : Array)\n            obj = \n{{ @type }}\n.create(traits)\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(traits : Array, **attrs)\n            obj = \n{{ @type }}\n.create(traits, **attrs)\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(traits : Array, attrs : Hash)\n            obj = \n{{ @type }}\n.create(traits, attrs)\n            obj\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n }\n            arr\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32, **attrs)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n(**attrs) }\n            arr\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32, attrs : Hash)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n(attrs) }\n            arr\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32, traits : Array)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n(traits) }\n            arr\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32, traits : Array, **attrs)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n(traits, **attrs) }\n            arr\n          \nend\n\n          def self.create_\n{{ factory_name }}\n(count : Int32, traits : Array, attrs : Hash)\n            arr = [] of \n{{ CLASS_NAME.last.id }}\n\n            count.times \n{ arr << create_\n{{ factory_name }}\n(traits, attrs) }\n            arr\n          \nend\n        \nend\n      \n"}},{"id":"skip_empty_constructor-macro","html_id":"skip_empty_constructor-macro","name":"skip_empty_constructor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L26","def":{"name":"skip_empty_constructor","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{% IGNORED_METHODS << \"empty_constructor\" %}\n\n      \n"}},{"id":"skip_hash_constructor-macro","html_id":"skip_hash_constructor-macro","name":"skip_hash_constructor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/base.cr#L26","def":{"name":"skip_hash_constructor","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{% IGNORED_METHODS << \"hash_constructor\" %}\n\n      \n"}}],"types":[]}]},{"html_id":"github.com/imdrasil/factory/Factory/Sequence","path":"Factory/Sequence.html","kind":"class","full_name":"Factory::Sequence","name":"Sequence","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/sequence.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"current-class-method","html_id":"current-class-method","name":"current","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr#L10","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr#L10","def":{"name":"current","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@start"}},{"id":"next-class-method","html_id":"next-class-method","name":"next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr#L5","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/sequence.cr#L5","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@start = @@start + 1\n@@start - 1\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/imdrasil/factory/Factory/Trait","path":"Factory/Trait.html","kind":"class","full_name":"Factory::Trait(T)","name":"Trait","abstract":true,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/trait.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr"},{"filename":"factory/jennifer/trait.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/jennifer/trait.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"add_attributes(hash):Void-class-method","html_id":"add_attributes(hash):Void-class-method","name":"add_attributes","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(hash) : Void","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L5","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L5","def":{"name":"add_attributes","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":""}},{"id":"associations-class-method","html_id":"associations-class-method","name":"associations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L14","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L14","def":{"name":"associations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[] of String"}},{"id":"make_assignes(obj:T):Void-class-method","html_id":"make_assignes(obj:T):Void-class-method","name":"make_assignes","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":"T"}],"args_string":"(obj : T) : Void","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L8","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L8","def":{"name":"make_assignes","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Void","visibility":"Public","body":""}},{"id":"process_association(obj,assoc)-class-method","html_id":"process_association(obj,assoc)-class-method","name":"process_association","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"assoc","doc":null,"default_value":"","external_name":"assoc","restriction":""}],"args_string":"(obj, assoc)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L11","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L11","def":{"name":"process_association","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""},{"name":"assoc","doc":null,"default_value":"","external_name":"assoc","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"constructors":[],"instance_methods":[],"macros":[{"id":"assign(name,value,klass=nil)-macro","html_id":"assign(name,value,klass=nil)-macro","name":"assign","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L3","def":{"name":"assign","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !(value.is_a?(ProcLiteral)) %}\n        {% if klass != nil %}\n          @@assign_{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@assign_{{ name.id }} = {{ value }}\n        {% end %}\n        {% ASSIGNS[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ASSIGNS[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"attr(name,value,klass=nil)-macro","html_id":"attr(name,value,klass=nil)-macro","name":"attr","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L3","def":{"name":"attr","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !(value.is_a?(ProcLiteral)) %}\n        {% if klass != nil %}\n          @@{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@{{ name.id }} = {{ value }}\n        {% end %}\n        {% ATTRIBUTES[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"sequence(name,init=0)-macro","html_id":"sequence(name,init=0)-macro","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"args_string":"(name, init = 0)","source_link":"https://github.com/imdrasil/factory/blob/d58ad5d9d60ce7344195eead9f9393d9c672866b/src/factory/trait.cr#L3","def":{"name":"sequence","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% sclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n\n      \n{% ATTRIBUTES[name.id.stringify] = \"-> { ->(#{block.args[0]} : Int32) { #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n\n      class \n{{ sclass }}\n < Factory::Sequence\n        @@start = \n{{ init }}\n\n      \nend\n    \n"}}],"types":[]}]}]}}