crystal_doc_search_index_callback({"repository_name":"github.com/imdrasil/factory","body":"# Factory [![Build Status](https://travis-ci.org/imdrasil/factory.svg)](https://travis-ci.org/imdrasil/factory)\n\nEasy to use but flexible factory definition utility. Coul be used for testing purpose and for developing as well.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  factory:\n    github: imdrasil/factory\n```\n\n## Usage\n\n```crystal\nrequire \"factory\"\n```\n\nTo define new factory\n```crystal\nclass HumanFactory < Factory::Base\nend\n```\n\nBy convenience this factory will builds `Human` class but this behavior can be overrided using `describe_class` macro:\n\n```crystal\nclass AdminFactory < Factory::Base\n    describe_class User\nend\n```\n\nFactory will build class passing to constructor hash with string keys, so those class should be ready for this. To define attributes for passing to constructor use `attr` macro:\n\n```crystal\nclass TestFactory < Factory::Base\n    attr :f1, \"Ivan\"\n    attr :f2, rand, Float64\n    attr :f3, -> { rand(1..3) }\nend\n```\n\nAttributes, passed as `Proc` will be executed each time. Other ones - only once and cached. If type could be analyzed (as with calling `rand` upper), you can specify exact type passing it as third parameter.\n\nThere is also assign strategy using `assign` macro. Using it all attributes will be assigned after initializing.\n\n```crystal\nclass TestFactory < Factory::Base\n    assign :f1, \"Ivan\"\n    assign :f2, rand, Float64\n    assign :f3, -> { rand(1..3 }\nend\n\n# Will be do smth like\nobj = Test.new\nobj.f1 = TestFactory.f1 # \"Ivan\"\nobj.f2 = TestFactory.f2 # 0.61 - just random value shared across all object\nobj.f3 = -> { rand(1..3) }.call\n```\n\nIf you specify no `attr` - will call construtor without any arguments and you will not be able pass anything to it.\n\nIf you need to specify exact type of given hash value use `argument_type`:\n\n```crystal\nclass Test\n  @@static = 1\n  @@dynamic = 1\n  property f1 : String, f2 : Int32, f3 : Float64,\n    f4 : String?, f5 : Int32?, f6 : Array(Int32)?\n\n  def initialize(hash)\n    @f1 = hash[\"f1\"].as(String)\n    @f2 = hash[\"f2\"].as(Int32)\n    @f3 = hash[\"f3\"].as(Float64)\n    @f6 = hash[\"f6\"].as(Array(Int32)) if hash.has_key?(\"f6\")\n  end\nend\n\nclass TestFactory < Factory::Base\n  argument_type String | Int32 | Float64 | Array(Int32)\n  attr :f1, \"some\"\n  attr :f2, 1\n  attr :f3, rand, Float64\nend\n```\n\nAlso `after_initialize` callback could be specified:\n\n```crystal\nclass TestFactory < Factory::Base\n    after_initialize do |t|\n        t.f1.not_nil! += 1\n    end\nend\n```\n\nAlso the way of object initializing could be specified:\n\n```crystal\nclass TestFactory < Factory::Base\n    # here is default builder\n    initialize_with do |hash, traits|\n        obj = Test.new(hash)\n        make_assigns(obj, traits) # makes all assignements (traits will be described later)\n        obj\n    end\nend\n```\n\nTo specify sequence of some attributes (only allowed as attr hook) use `sequence`:\n\n```crystal\nsequence(:f1) { |i| \"user#{i}@example.com\" }\n```\n\nYou could inherite from existing factory and override some parameters:\n```crystal\nclass HumanFactory < Factory::Base\n    describe_class User\n    attr :f1, \"asd\"\nend\n\nclass AdminFactory < HumanFactory\n    attr :f1, \"admin\"\n    assign :f2, 1\nend\n```\n\nChild factory inherits all attrs, assigns, traits, sequences, callbacks, class names, has value type.\n\nTo group several attributes or assignments use trait. \n\n```crystal\nclass HumanFactory < Factory::Base\n    trait :homo do\n        attr :iq, 50\n    end\nend\n```\n\nTraits can't specify callbacks, described type, hash value type.\n\nTo build object direct call could be used\n```crystal\nHumanFactory.build\nHumanFactory.build(some_attr: \"asd\")\nHumanFactory.build({\"some_attr\" => \"asd\")\nHumanFactory.build([\"some_trait\"], some_attr: \"asd\")\nHumanFactory.build([\"some_trait\"], {\"some_attr\" => \"asd\"})\n```\n\nAlso helper methods are defined as well\n\n```crystal\nFactory.build_human\nFactory.build_human(some_attr: \"asd\")\nFactory.build_human({\"some_attr\" => \"asd\")\nFactory.build_human([\"some_trait\"], some_attr: \"asd\")\nFactory.build_human([\"some_trait\"], {\"some_attr\" => \"asd\"})\n# also you can specify count as first parameter in any of thos methods\nFactory.build_human(3, [\"some_trait\"], {\"some_attr\" => \"asd\"})\n```\n\n## Development\n\nNext step will be integration with [jennifer](https://github.com/imdrasil/jennifer.cr) shard.\n\n## Contributing\n\n1. Fork it ( https://github.com/imdrasil/factory/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [imdrasil](https://github.com/imdrasil) Roman Kalnytskyi - creator, maintainer\n\n","program":{"html_id":"github.com/imdrasil/factory/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/imdrasil/factory","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/imdrasil/factory/Factory","path":"Factory.html","kind":"module","full_name":"Factory","name":"Factory","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"factory.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory.cr"},{"filename":"factory/trait.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr"},{"filename":"factory/base.cr","line_number":3,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr"},{"filename":"factory/jennifer.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/jennifer.cr"},{"filename":"factory/sequence.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr"},{"filename":"factory/version.cr","line_number":1,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/version.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"FACTORIES","name":"FACTORIES","value":"{} of String => String","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"default_methods-macro","html_id":"default_methods-macro","name":"default_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory.cr#L4","def":{"name":"default_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro attr(name, value, klass = nil)\n      \n\\{% if\n !value.is_a?(ProcLiteral) %}\n        \n\\{% if\n klass != nil %}\n          @@\n\\{\n{name.id}} : \n\\{\n{klass}} = \n\\{\n{value}}\n        \n\\{% e\nlse %}\n          @@\n\\{\n{name.id}} = \n\\{\n{value}}\n        \n\\{% end\n %}\n        \n\\{% \nATTRIBUTES[name.id.stringify] = \"plain\" %}\n      \n\\{% e\nlse %}\n        \n\\{% \nATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      \n\\{% end\n %}\n    \nend\n\n    macro assign(name, value, klass = nil)\n      \n\\{% if\n !value.is_a?(ProcLiteral) %}\n        \n\\{% if\n klass != nil %}\n          @@assign_\n\\{\n{name.id}} : \n\\{\n{klass}} = \n\\{\n{value}}\n        \n\\{% e\nlse %}\n          @@assign_\n\\{\n{name.id}} = \n\\{\n{value}}\n        \n\\{% end\n %}\n        \n\\{% \nASSIGNS[name.id.stringify] = \"plain\" %}\n      \n\\{% e\nlse %}\n        \n\\{% \nASSIGNS[name.id.stringify] = value.id.stringify %}\n      \n\\{% end\n %}\n    \nend\n\n    macro sequence(name, init = 0, &block)\n      \n\\{% \nsclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n      \n\\{% \nATTRIBUTES[name.id.stringify] = \"-> \n{ ->(#{block.args[0]} : Int32) \n{ #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n      class \n\\{\n{sclass}} < Factory::Sequence\n        @@start = \n\\{\n{init}}\n      \nend\n    \nend\n  \n"}},{"id":"render_build_methods-macro","html_id":"render_build_methods-macro","name":"render_build_methods","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory.cr#L40","def":{"name":"render_build_methods","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    macro factory_builders(factory_name)\n      module ::Factory\n        def self.build_\n\\{\n{factory_name}}\n          \n\\{\n{@type}}.build\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(**attrs)\n          \n\\{\n{@type}}.build(**attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(attrs : Hash)\n          \n\\{\n{@type}}.build(attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array)\n          \n\\{\n{@type}}.build(traits)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array, **attrs)\n          \n\\{\n{@type}}.build(traits, **attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(traits : Array, attrs : Hash)\n          \n\\{\n{@type}}.build(traits, attrs)\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, **attrs)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(**attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, attrs : Hash)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array, **attrs)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits, **attrs) }\n          arr\n        \nend\n\n        def self.build_\n\\{\n{factory_name}}(count : Int32, traits : Array, attrs : Hash)\n          arr = [] of \n\\{\n{CLASS_NAME.last.id}}\n          count.times \n{ arr << \n\\{\n{@type}}.build(traits, attrs) }\n          arr\n        \nend\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/imdrasil/factory/Factory/Base","path":"Factory/Base.html","kind":"class","full_name":"Factory::Base","name":"Base","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/base.cr","line_number":4,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"after_create(obj)-class-method","html_id":"after_create(obj)-class-method","name":"after_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L14","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L14","def":{"name":"after_create","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Not Implemented yet\")"}},{"id":"after_initialize(obj)-class-method","html_id":"after_initialize(obj)-class-method","name":"after_initialize","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L11","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L11","def":{"name":"after_initialize","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"attributes-class-method","html_id":"attributes-class-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L22","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L22","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{} of String => String"}},{"id":"before_create(obj)-class-method","html_id":"before_create(obj)-class-method","name":"before_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L18","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L18","def":{"name":"before_create","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Not Implemented yet\")"}},{"id":"build-class-method","html_id":"build-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L5","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L5","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"get_trait(name)-class-method","html_id":"get_trait(name)-class-method","name":"get_trait","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L8","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L8","def":{"name":"get_trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"constructors":[],"instance_methods":[],"macros":[{"id":"after_create-macro","html_id":"after_create-macro","name":"after_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L43","def":{"name":"after_create","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self.after_create(\n{{ block.args[0].id }}\n)\n        super\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"after_initialize-macro","html_id":"after_initialize-macro","name":"after_initialize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L29","def":{"name":"after_initialize","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self.after_initialize(\n{{ block.args[0].id }}\n)\n        super\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"argument_type(type)-macro","html_id":"argument_type(type)-macro","name":"argument_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(type)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L54","def":{"name":"argument_type","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% ARGUMENT_TYPE.push(type.stringify) %}\n\n    \n"}},{"id":"assign(name,value,klass=nil)-macro","html_id":"assign(name,value,klass=nil)-macro","name":"assign","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L26","def":{"name":"assign","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !value.is_a?(ProcLiteral) %}\n        {% if klass != nil %}\n          @@assign_{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@assign_{{ name.id }} = {{ value }}\n        {% end %}\n        {% ASSIGNS[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ASSIGNS[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"attr(name,value,klass=nil)-macro","html_id":"attr(name,value,klass=nil)-macro","name":"attr","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L26","def":{"name":"attr","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !value.is_a?(ProcLiteral) %}\n        {% if klass != nil %}\n          @@{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@{{ name.id }} = {{ value }}\n        {% end %}\n        {% ATTRIBUTES[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"before_create-macro","html_id":"before_create-macro","name":"before_create","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L36","def":{"name":"before_create","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self.before_create(\n{{ block.args[0].id }}\n)\n        super\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"describe_class(klass)-macro","html_id":"describe_class(klass)-macro","name":"describe_class","doc":null,"summary":null,"abstract":false,"args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"args_string":"(klass)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L50","def":{"name":"describe_class","args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% CLASS_NAME.push(klass.stringify) %}\n\n    \n"}},{"id":"factory_builders(factory_name)-macro","html_id":"factory_builders(factory_name)-macro","name":"factory_builders","doc":null,"summary":null,"abstract":false,"args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"args_string":"(factory_name)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L27","def":{"name":"factory_builders","args":[{"name":"factory_name","doc":null,"default_value":"","external_name":"factory_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      module ::Factory\n        def self.build_\n{{ factory_name }}\n\n          \n{{ @type }}\n.build\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(**attrs)\n          \n{{ @type }}\n.build(**attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(attrs : Hash)\n          \n{{ @type }}\n.build(attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array)\n          \n{{ @type }}\n.build(traits)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array, **attrs)\n          \n{{ @type }}\n.build(traits, **attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(traits : Array, attrs : Hash)\n          \n{{ @type }}\n.build(traits, attrs)\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, **attrs)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(**attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, attrs : Hash)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array, **attrs)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits, **attrs) }\n          arr\n        \nend\n\n        def self.build_\n{{ factory_name }}\n(count : Int32, traits : Array, attrs : Hash)\n          arr = [] of \n{{ CLASS_NAME.last.id }}\n\n          count.times \n{ arr << \n{{ @type }}\n.build(traits, attrs) }\n          arr\n        \nend\n      \nend\n    \n"}},{"id":"initialize_with-macro","html_id":"initialize_with-macro","name":"initialize_with","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L66","def":{"name":"initialize_with","args":[],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      def self.initialize_with(\n{{ block.args[0].id }}\n, \n{{ block.args[1].id }}\n)\n        \n{{ block.body }}\n\n      \nend\n    \n"}},{"id":"sequence(name,init=0)-macro","html_id":"sequence(name,init=0)-macro","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"args_string":"(name, init = 0)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L26","def":{"name":"sequence","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% sclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n\n      \n{% ATTRIBUTES[name.id.stringify] = \"-> { ->(#{block.args[0]} : Int32) { #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n\n      class \n{{ sclass }}\n < Factory::Sequence\n        @@start = \n{{ init }}\n\n      \nend\n    \n"}},{"id":"trait(name)-macro","html_id":"trait(name)-macro","name":"trait","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/base.cr#L58","def":{"name":"trait","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% trait_name = (name.id.stringify.camelcase + \"Trait\") %}\n\n      \n{% TRAITS[name.id.stringify] = trait_name %}\n\n      class \n{{ trait_name.id }}\n < ::Factory::Trait\n        \n{{ yield }}\n\n      \nend\n    \n"}}],"types":[]},{"html_id":"github.com/imdrasil/factory/Factory/Jennifer","path":"Factory/Jennifer.html","kind":"module","full_name":"Factory::Jennifer","name":"Jennifer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"factory/jennifer.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/jennifer.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/imdrasil/factory/Factory/Sequence","path":"Factory/Sequence.html","kind":"class","full_name":"Factory::Sequence","name":"Sequence","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/sequence.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"current-class-method","html_id":"current-class-method","name":"current","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr#L10","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr#L10","def":{"name":"current","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@start"}},{"id":"next-class-method","html_id":"next-class-method","name":"next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr#L5","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/sequence.cr#L5","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@start = @@start + 1\n@@start - 1\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/imdrasil/factory/Factory/Trait","path":"Factory/Trait.html","kind":"class","full_name":"Factory::Trait","name":"Trait","abstract":false,"superclass":{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/factory/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/factory/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"factory/trait.cr","line_number":2,"url":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr"}],"repository_name":"github.com/imdrasil/factory","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/factory/Factory","kind":"module","full_name":"Factory","name":"Factory"},"doc":null,"summary":null,"class_methods":[{"id":"add_attributes(hash)-class-method","html_id":"add_attributes(hash)-class-method","name":"add_attributes","doc":null,"summary":null,"abstract":false,"args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"args_string":"(hash)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L5","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L5","def":{"name":"add_attributes","args":[{"name":"hash","doc":null,"default_value":"","external_name":"hash","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash"}},{"id":"make_assignes(obj)-class-method","html_id":"make_assignes(obj)-class-method","name":"make_assignes","doc":null,"summary":null,"abstract":false,"args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"args_string":"(obj)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L9","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L9","def":{"name":"make_assignes","args":[{"name":"obj","doc":null,"default_value":"","external_name":"obj","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"obj"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"assign(name,value,klass=nil)-macro","html_id":"assign(name,value,klass=nil)-macro","name":"assign","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L3","def":{"name":"assign","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !value.is_a?(ProcLiteral) %}\n        {% if klass != nil %}\n          @@assign_{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@assign_{{ name.id }} = {{ value }}\n        {% end %}\n        {% ASSIGNS[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ASSIGNS[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"attr(name,value,klass=nil)-macro","html_id":"attr(name,value,klass=nil)-macro","name":"attr","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"args_string":"(name, value, klass = nil)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L3","def":{"name":"attr","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""},{"name":"klass","doc":null,"default_value":"nil","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if !value.is_a?(ProcLiteral) %}\n        {% if klass != nil %}\n          @@{{ name.id }} : {{ klass }} = {{ value }}\n        {% else %}\n          @@{{ name.id }} = {{ value }}\n        {% end %}\n        {% ATTRIBUTES[name.id.stringify] = \"plain\" %}\n      {% else %}\n        {% ATTRIBUTES[name.id.stringify] = value.id.stringify %}\n      {% end %}\n\n    \n"}},{"id":"sequence(name,init=0)-macro","html_id":"sequence(name,init=0)-macro","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"args_string":"(name, init = 0)","source_link":"https://github.com/imdrasil/factory/blob/98a8f8450d4998949806372627a6e5fa5c6611a9/src/factory/trait.cr#L3","def":{"name":"sequence","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"init","doc":null,"default_value":"0","external_name":"init","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":""},"visibility":"Public","body":"      \n{% sclass = (name.id.stringify.camelcase + \"Sequence\").id %}\n\n      \n{% ATTRIBUTES[name.id.stringify] = \"-> { ->(#{block.args[0]} : Int32) { #{block.body.id} }.call(#{sclass.id}.next) }\" %}\n\n      class \n{{ sclass }}\n < Factory::Sequence\n        @@start = \n{{ init }}\n\n      \nend\n    \n"}}],"types":[]}]}]}})