crystal_doc_search_index_callback({"repository_name":"github.com/imdrasil/http_method_emulator","body":"# http_method_emulator\n\nSimple HTTP method emulator for form submitted data.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n```yaml\ndependencies:\n  http_method_emulator:\n    github: imdrasil/http_method_emulator\n```\n2. Run `shards install`\n\n## Usage\n\nHTML form supports only `GET` and `POST` method. To bring other methods support you can use this shard. This shard will be useful for a web frameworks/libs that have no such functionality (like Kemal or Spider-Gazelle).\n\n```crystal\nrequire \"http_method_emulator\"\n\n# Add handler to your middlewares\n# like for Kemal\n\nadd_handler HTTPMethodEmulator::Handler::INSTANCE\n```\n\nAlso require `\"lib/http_method_emulator/assets/http_method_emulator.js\"` in your js assets.\n\nNow you can just create `POST` form with hidden field `_method` holding required method.\n\n```html\n<form method=\"POST\" action=\"/some/path\">\n  <input type=\"hidden\" name=\"_method\" value=\"PATCH\">\n  <button type=\"submit\">Make Request</button>\n</form>\n```\n\nJS catches submit event and add query parameter based on form `_method` field (or do nothing if it isn't exist). Handler modifies `POST` request method setting value sent in query `_method` field.\n\n### Configuration\n\nYou can specify field name to be used for holding method name. This should be done in two places - crystal and JS.\n\n```crystal\nHTTPMethodEmulator.config do |conf|\n  conf.key = \"http_method\"\nend\n```\n\n```js\n// Anywhere after js being imported\nwindow.HTTPMethodEmulator.key = \"http_method\"\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/imdrasil/http_method_emulator/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Roman Kalnytskyi](https://github.com/imdrasil) - creator and maintainer\n","program":{"html_id":"github.com/imdrasil/http_method_emulator/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/imdrasil/http_method_emulator","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/imdrasil/http_method_emulator/HTTPMethodEmulator","path":"HTTPMethodEmulator.html","kind":"module","full_name":"HTTPMethodEmulator","name":"HTTPMethodEmulator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"handler.cr","line_number":3,"url":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr"},{"filename":"http_method_emulator.cr","line_number":3,"url":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/http_method_emulator.cr"}],"repository_name":"github.com/imdrasil/http_method_emulator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"config(&block)-class-method","html_id":"config(&amp;block)-class-method","name":"config","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/http_method_emulator.cr#L6","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/http_method_emulator.cr#L6","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield Hanlder::INSTANCE"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/imdrasil/http_method_emulator/HTTPMethodEmulator/Handler","path":"HTTPMethodEmulator/Handler.html","kind":"class","full_name":"HTTPMethodEmulator::Handler","name":"Handler","abstract":false,"superclass":{"html_id":"github.com/imdrasil/http_method_emulator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/imdrasil/http_method_emulator/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/imdrasil/http_method_emulator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/imdrasil/http_method_emulator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"handler.cr","line_number":4,"url":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr"}],"repository_name":"github.com/imdrasil/http_method_emulator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INSTANCE","name":"INSTANCE","value":"new","doc":null,"summary":null},{"id":"POST_METHOD","name":"POST_METHOD","value":"\"POST\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/imdrasil/http_method_emulator/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/imdrasil/http_method_emulator/HTTPMethodEmulator","kind":"module","full_name":"HTTPMethodEmulator","name":"HTTPMethodEmulator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L13","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L13","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request = context.request\nif (request.method == POST_METHOD) && (method = request.query_params[field]?)\n  request.method = method\nend\ncall_next(context)\n"}},{"id":"field:String-instance-method","html_id":"field:String-instance-method","name":"field","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L11","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L11","def":{"name":"field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@field"}},{"id":"field=(field:String)-instance-method","html_id":"field=(field:String)-instance-method","name":"field=","doc":null,"summary":null,"abstract":false,"args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"args_string":"(field : String)","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L11","source_link":"https://github.com/imdrasil/http_method_emulator/blob/2d4e723ca58ed90f0bd4ea22c58840531025c3fb/src/handler.cr#L11","def":{"name":"field=","args":[{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@field = field"}}],"macros":[],"types":[]}]}]}})